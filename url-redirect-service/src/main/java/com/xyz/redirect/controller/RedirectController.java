package com.xyz.redirect.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.server.ResponseStatusException;

import com.xyz.redirect.dto.RealUrl;
import com.xyz.redirect.entity.URLAccess;
import com.xyz.redirect.repository.UrlAccessRepo;
import com.xyz.redirect.service.RoutingService;

import lombok.extern.slf4j.Slf4j;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.NoSuchElementException;

@CrossOrigin(origins = "*", maxAge = 3600)
@Controller
@Slf4j
public class RedirectController {
    protected final RoutingService urlService;

    protected final UrlAccessRepo urlAccessRepo;

    @Autowired
    public RedirectController(RoutingService urlService, UrlAccessRepo urlAccessRepo) {
        this.urlService = urlService;
        this.urlAccessRepo = urlAccessRepo;
    }

    /**
     * @param response HttpServletResponse - used to redirect to real url
     * @param shortenString Shortened string - Text is Base62 encoded generated by "/shorten" endpoint
     */
    @GetMapping("/{shortenString}")
    public void redirectToRealUrl(HttpServletResponse response, @PathVariable String shortenString) {
        try {
            RealUrl realUrl = urlService.getRealUrl(shortenString);

            log.info(String.format("Redirecting to %s", realUrl.getRealUrl()));
            URLAccess access = new URLAccess(shortenString);
            this.urlAccessRepo.save(access);

            // Redirects the reponse to the real url
            response.sendRedirect(realUrl.getRealUrl());
        } catch (NoSuchElementException e) {
            log.error(String.format("No URL found for %s in the db", shortenString));
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Url not found", e);
        } catch (IOException e) {
            log.error("Could not redirect to the real url");
            throw new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, "Could not redirect to the real url", e);
        }
    }
}
